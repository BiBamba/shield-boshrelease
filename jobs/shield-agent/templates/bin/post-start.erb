#!/bin/bash

# Add all packages' /bin & /sbin into $PATH
for package_bin_dir in $(ls -d /var/vcap/packages/*/*bin)
do
  export PATH=${package_bin_dir}:$PATH
done

<% if_p("shield.target.name") do |target_name|%>

export SHIELD_API=<%= p("shield.agent.autoprovision") %>

TARGET=$(shield --raw show target <%= target_name %> | jq -r '.uuid // empty')
if [[ -z ${TARGET} ]]; then
  echo "Creating target"
	cat /var/vcap/jobs/shield-agent/config/target.json | shield --raw create target
else
  echo "Editing target"
	cat /var/vcap/jobs/shield-daemon/config/target.json | shield --raw edit target
fi
<% if_p("shield.job.name", "shield.job.store", "shield.job.retention", "shield.job.schedule") do |job_name, retention, schedule, store| %>

STORE=$(shield --raw show store <%= store %> | jq -r '.uuid // empty')
RETENTION=$(shield --raw show retention policy <%= retention %> | jq -r '.uuid // empty')
SCHEDULE=$(shield --raw show schedule <%= schedule %> | jq -r '.uuid // empty')

cat <<EOF > /tmp/job.json
{"name":      "<%= job_name %>",
 "target":    "${TARGET}",
 "store":     "${STORE}",
 "schedule":  "${SCHEDULE}",
 "retention": "${RETENTION}",
 "paused":    false
}
EOF

JOB=$(shield --raw show job <%= job_name %> | jq -r '.uuid // empty')
if [[ -z ${JOB} ]]; then
  echo "Creating job"
	cat /tmp/job.json | shield --raw create job
else
  echo "Editing job"
  cat /tmp/job.json | shield --raw edit job
fi

# End Job
<% end %>

# End Target
<% end %>



